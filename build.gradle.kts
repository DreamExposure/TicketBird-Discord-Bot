/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    java
    `maven-publish`
    id("com.google.cloud.tools.jib") version("3.0.0")
    id("org.springframework.boot") version("2.5.0")
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://jitpack.io")
    }

    maven {
        url = uri("https://repo.spring.io/libs-release")
    }

    maven {
        url = uri("https://emily.dreamexposure.org/artifactory/dreamexposure-public/")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    implementation("org.dreamexposure:NovaUtils:1.0.0-SNAPSHOT")
    implementation("com.discord4j:discord4j-core:3.0.6")
    implementation("com.discord4j:stores-redis:3.0.5")
    implementation("mysql:mysql-connector-java:8.0.15")
    implementation("org.json:json:20180813")
    implementation("org.jetbrains:annotations:17.0.0")
    implementation("org.thymeleaf:thymeleaf:3.0.11.RELEASE")
    implementation("org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE")
    implementation("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:2.1.5.RELEASE")
    implementation("org.springframework.boot:spring-boot-starter-web:2.1.5.RELEASE")
    implementation("org.springframework.session:spring-session-data-redis:2.1.5.RELEASE")
    implementation("org.springframework.security:spring-security-core:5.1.5.RELEASE")
    implementation("org.springframework.security:spring-security-web:5.1.5.RELEASE")
    implementation("com.squareup.okhttp3:okhttp:3.14.0")
    implementation("com.github.DiscordBotList:Java-Wrapper:v1.0")
    implementation("club.minnced:discord-webhooks:0.5.7")
    implementation("org.flywaydb:flyway-core:5.2.4")
}

group = "org.dreamexposure"
version = "1.0.0"
description = "TicketBird"
java.sourceCompatibility = JavaVersion.VERSION_1_8

jib {
    to.image = "rg.nl-ams.scw.cloud/dreamexposure/ticketbird:$version"
}

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}
